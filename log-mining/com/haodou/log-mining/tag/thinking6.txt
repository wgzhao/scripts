1. 燕麦黑面包-首发	1
香草早餐包	1
鲜虾披萨	2
花生酱肉松面包卷	1

【临时概念】
重复模式。需要AB AB AB这样的重复。需要将“AB”看成一个整体来提炼重复模式。
这样的AB只能看成一个临时概念。临时概念是很重要的。在局部范围内，这个临时概念是一个结构体。

2. 所有的结构，在模板里面都是有的。结构可以单独学习，但是不能在解析过程中同时要求电脑自创模式。

因为一个模式的习得需要大量的实例或者外部经验。不能要求在解析的同时就获得新的模式。

3. 存在两种概念，一种是内容，一种是动作。
内容是属性，动作是函数。

继承这样的概念就是动作。
其实，每个概念除了内容部分，都包含动作部分。

哪些动作概念，最底层部分就必须用程序来定义了。
程序直接实现这些动作了。

4. 像排列指示词这种概念，最好用动作实现。
这个动作发生在搜索过程中，就是检查其两侧的概念是否相同。

5. 做统计。统计每个模式出现的次数。
分词词典中的词语，也是一种模式。

"词语"这个概念的属性在于，词典作为一个整体参与上层模板的构成。

这个属性应该作为模板生成过程中的一部分。

[颜色]+[食材]->[食材]
像这样的递归推导，也表明左侧部分构成“词语”。


另外，词语是个语法上的概念。并不阻止词语内部的要素在语义上单独与词语外的要素进行结合，组合成新的整体。

语法是概念的组织和展现形式。概念作为一个整体出现时，就是名词。
概念的属性进行描述时，就是形容词。
表达概念的关系或者变化时，就是动词。
概念的内涵本身就是语义了。

统计结果还是放在trie树中。
这里的trie树中的模式是没有经过确认的。所以，只是候选串。

像分词词典中的词语则已经是经过确认的模式。
其实，不管模式还是模板，都暗含一个要求，就是整体性。这个“整体性”的属性就是“词语”这个概念的本质属性。

语法知识应该知道概念的搜索顺序。如果是一个整体，则应该优先搜索整体所对应的概念。
如果前面是及物动词，则后面应该优先搜索名词。

每个概念都应该指导模板的搜索。只是对于语法概念，它们在这方面表现得更集中，更纯粹。


6. 槽位相关性计算：
在前面的模板推导中，对于一个复杂概念内部不相邻字符串所表征的槽位之间的依赖关系没有进行表述。
有两个解决步骤：其一，槽位之间的依赖关系直接写在模板中。当然，这个要求修正现有的模板语法。
其二，槽位依赖关系的自动推导。


槽位依赖关系的自动推导实例：
一条鱼
一只鸡
一只鸭子
一只虾
一条蛇

这里的“条”与“鱼”，“只”和“鸡”之间存在依赖关系。
其概率表达如下：
当“[量词][实体词]”这样的模式出现时，两个槽位所对应的字符串的取值之间存在依赖关系。就是通常会说“一条鱼”，而几乎不会说“一只鱼”。
会说“一只鸡”而不会说“一条鸡”。
当然，P(一只鱼|鱼） > P(一条鸡|鸡）


我们要分析两个离散变量p(instance([量词])=x|[量词][实体词])与p(instance([实体词])=y|[量词][实体词])之间的依赖关系。


还有一些递归模板。对于最终结果的递归层数，以及同类槽位在最终匹配结果中出现次数的分布。
这个也需要统计。
不过，这样的依赖模式的种类需要后续归纳。这些模式不像上面的槽位依赖那么直观。


7. 从概念到模板的统计：
我们只需要给出一个概念的组成要素。
如果我们能够识别组成要素。那么，我们就可以去猜测这些组成要素能否构成该概念。

首先，基于统计，我们可以给出要素的组合模式。然后，验证该模式的合法性。
这里面主要是为了消岐。看这个模式在组成该概念时，除了频次高以外，是否还有足够高的多样性。

8. 集合的问题：
“姜一定要弄成末才味道更浓而且不容易吃到块状的辣嘴”

这里，一方面是同一个概念的两种并列状态，即“姜”的两种加工状态，“末”和“块状”。
这里是成对照的。
但是，这里的“加工”本身又是一个动作，动作有已实现和未实现，有动作的原因。
实际上，只有“末”这个状态才是已实现的状态，而“块状”是未实现的状态，对于未实现的状态，有“不容易”这个否定前置来表明其“未实现”。
实现状态->未实现状态，来自同一个概念，可以说是并列。但是，基于这两个并列状态的相互排斥关系，从集合层面来讲，存在以下包含关系：
状态（末）C> 状态(块状)   [用C>来表示集合之间的包含关系，表明右侧的包含于左侧的集合]
因此，从态（末）到 状态(块状)，是包含目的关系的。
基于动作的主观性，目的关系中的目的可以视为原因。

在这里，我们讲到集合。如果要讲概念，就必须讲集合。一个概念与概念的实体之间的关系，应该用集合论来描述。
当然，概念和实体之间的关系，可能还有集合论之外的含义。
集合论之外的含义在于名实关系。概念的名字本身，有时候指征该概念的实体，但是有时候指征该概念，而有时候则仅仅是字符串属性。
“鱼类可以吃。” “鱼不是爬行动物。”    指征概念（鱼类），或者是任一的鱼（实体）。语法上是指征概念，语义上却可以覆盖任一实体。
“那条鱼死了。”    具体的鱼（实体）
“鱼字不好写。”    字符串

从集合论来讲，还有数量的问题。有时候我们要看概念名本身是指任一，是单数。有时候是复数，如“多数鱼类都有刺”，因为有“多数”这个限定。这里的“多数”与“任一”是同一个层面的概念。“任一”从语义上可以描述一个复数的对象，但是从语法上却是一个单一的对象。
根据对一个单一的个体的描述来表达一个集体整体的属性，这是一个语法现象，而语义是这个语法背后的东西。


概念和实体关系，这是是一个默认的普遍存在的关系。因此，我们要自动启动这个识别机制。
关于时空属性，特别是时间属性，也涉及到这个问题。
大多数概念，都是有时间属性的。而且，属性值随着时间变化，这个是不是还是同一个实体呢？
通常，在同一个时间点，大多数概念的属性都是稳定的。

当然，不同空间的同概念实体，通常会被认为是不同实体。

实体的同一性判定，这个与概念上的同类判定是不同的。
虽然我们可以将不同时间点的同一实体看成为一个概念，而将不同时间点的状态作为实体。但是，这样导致的概念爆炸是会得不偿失，而且没有意义。
还不如定义单独的时间维度来得简单。并基于此设置“同一判定”和“同类判定”两者的区别。

当然，我们可以将“同一判定”视为一种特殊的“同类判定”，可以共享“同类判定”的一些方法。
但是，没必要彻底抹杀“同一判定”的特殊性。

同一判定，对应到自然语言处理里面，本身有特殊的表达方式和应用场景。



